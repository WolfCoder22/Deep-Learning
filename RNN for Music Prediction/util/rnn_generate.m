function y = rnn_generate(net, seed, seq_len, keep_seed)
% Utility function that, given a vl_simplenn network definition NET and a SEED
% sequence having size [1, T, K, 1] (where T is sequence length and K is
% the number of classes), produces Y, having size [1, T+SEQ_LEN, K, 1]. The
% function forward-propagates the T events of SEED through the net. It then 
% generates SEQ_LEN additional events. Each event in SEQ_LEN, is generated by 
% sampling from the probability distribution defined by the net's output and 
% feeding the result into the net's input. If KEEP_SEED is TRUE the
% default) then the SEED is concatenated to the beginning of the generated
% output.
if nargin < 4
  keep_seed = true;
end

nclasses = size(seed, 3);
sl = size(seed, 2);
y = zeros(1, seq_len+sl, nclasses, size(seed, 4));
net.layers{end}.type = 'softmax'; 
res = rnn_init_forward_states(net, size(seed, 4));
for i = 1:sl
  res = vl_simplenn(net, seed(:,i,:,:), [], res);
  x = sample_from_output(nclasses, res(end).x);
  y(1,i,:,:) = x;
end

x = sample_from_output(nclasses, res(end).x);
for i = 1:sl+seq_len
  res = vl_simplenn(net, x, [], res);
  x = sample_from_output(nclasses, res(end).x);
  y(1,i+sl,:,:) = x;
end
if ~keep_seed
  y = y(:,sl+1:end,:,:);
end
end

function xout = sample_from_output(nclasses, xin)
n = size(xin, 4);
xout = zeros(1, 1, nclasses, n); 
for i = 1:n
  ix = randsample(nclasses, 1, true, xin(1,1,:,i));
  xout(1,1,ix,i) = 1;
end
end